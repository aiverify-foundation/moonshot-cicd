name: Moonshot_Testing

on:
  # Run this workflow manually from Actions tab
  workflow_dispatch:
    inputs:
      branch_moonshot:
        description: 'moonshot branch'
        required: true
        default: 'dev_main'
        type: string
      moonshot_command:
        description: 'command to input to moonshot'
        required: true
        default: 'echo "default command"'
        type: string

jobs:
    branch-build-test-push:
        permissions:
            id-token: write
            contents: read
        runs-on: ubuntu-latest
        steps:
          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-region: ap-southeast-1
              role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

          - name: Set branch variable (workflow_dispatch)
            if: github.event_name == 'workflow_dispatch'
            run: |
              echo "MS_BRANCH=${{ inputs.branch_moonshot }}" >> "$GITHUB_ENV"
              echo "${{ inputs.branch_moonshot }}"
              echo "COMMAND=${{ inputs.moonshot_command }}" >> "$GITHUB_ENV"
              echo "${{ inputs.moonshot_command }}"
          
          - name: Checkout code
            uses: actions/checkout@v4
            with:
                ref: ${{ env.MS_BRANCH }}
                submodules: recursive
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
    
          - name: Build Docker image
            run: |
              docker build -t moonshot:test .

          - name: Run Smoke Tests on Moonshot Image
            run: |
              echo "COMMAND IS "
              echo "$COMMAND"
              docker run --rm \
              -e OPENAI_API_KEY="${{ secrets.OPENAI_TOKEN }}" \
              -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
              -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
              -e AWS_SESSION_TOKEN="$AWS_SESSION_TOKEN" \
              -e AWS_REGION="$AWS_REGION" \
              --entrypoint "" \
              -v "${{ github.workspace }}/data/results:/app/data/results" \
              moonshot:test sh -c "$COMMAND"

          - name: Upload Test Results as Artifacts
            uses: actions/upload-artifact@v4
            with:
              name: test-results
              path: data/results/*
