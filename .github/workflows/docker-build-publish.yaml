name: Release_Docker_image_build_and_push

on:
  workflow_dispatch:
    inputs:
      moonshot_version_tag:
        description: 'Version tag for the Moonshot image'
        required: false
        type: string
        default: ''
      process_checks_version_tag:
        description: 'Version tag for the Process Checks image'
        required: false
        type: string
        default: ''

jobs:
  main-build-test-push:
    if: github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write
      contents: read
      packages: write
    runs-on: ubuntu-latest

    env:
      GHCR_REGISTRY: ghcr.io
      GHCR_NAMESPACE: aiverify-foundation
      # ECR_REGISTRY: ${{ secrets.ECR_URI }}
      # ECR_REGISTRY_PC: ${{ secrets.ECR_URI_PC }}
      IMAGE_NAME_MS: moonshot
      IMAGE_NAME_PC: process_checks

    steps:
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-region: ap-southeast-1
    #     role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

    - name: Checkout code
      uses: actions/checkout@v4

    

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Login to AWS ECR
    #   uses: aws-actions/amazon-ecr-login@v2

    # ----- Moonshot Steps -----
    # - name: Build & Push Moonshot to GHCR
    #   if: ${{ inputs.moonshot_version_tag != '' }}
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: .
    #     push: true
    #     platforms: linux/amd64,linux/arm64
    #     tags: |
    #       ghcr.io/${{ env.GHCR_NAMESPACE }}/${{ env.IMAGE_NAME_MS }}:${{ inputs.moonshot_version_tag }}
    #       ghcr.io/${{ env.GHCR_NAMESPACE }}/${{ env.IMAGE_NAME_MS }}:latest

    - name: Build Moonshot Docker image
      if: ${{ inputs.moonshot_tag != '' }}
      run: |
        docker build -t moonshot:${{ inputs.moonshot_tag }} .

    - name: Push Moonshot Image to GitHub CR
      if: ${{ inputs.moonshot_tag != '' }}
      run: |
        docker login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
        docker tag moonshot:${{ inputs.moonshot_tag }} ghcr.io/aiverify-foundation/moonshot:${{ inputs.moonshot_tag }}
        docker push ghcr.io/aiverify-foundation/moonshot:${{ inputs.moonshot_tag }}

    # - name: Build & Push Moonshot ECR
    #   if: ${{ inputs.moonshot_version_tag != '' }}
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: .
    #     push: true
    #     provenance: false
    #     tags: |
    #       ${{ env.ECR_REGISTRY }}:${{ inputs.moonshot_version_tag }}
    #       ${{ env.ECR_REGISTRY }}:latest

    # ----- Process Checks Steps -----
    - name: Build & Push Process Checks Multi-arch to GHCR
      if: ${{ inputs.process_checks_version_tag != '' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile_PC
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ghcr.io/${{ env.GHCR_NAMESPACE }}/process_checks:${{ inputs.process_checks_version_tag }}
          ghcr.io/${{ env.GHCR_NAMESPACE }}/process_checks:latest

    # - name: Build & Push Process Checks ECR
    #   if: ${{ inputs.process_checks_version_tag != '' }}
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: .
    #     file: Dockerfile_PC
    #     push: true
    #     provenance: false
    #     tags: |
    #       ${{ env.ECR_REGISTRY_PC }}:${{ inputs.process_checks_version_tag }}
    #       ${{ env.ECR_REGISTRY_PC }}:latest