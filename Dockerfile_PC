# ---------- Build stage ----------
FROM python:3.12-slim AS build

# Install Poetry and dependencies
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y gcc libffi-dev build-essential && \
    pip install poetry==2.1.2 --no-cache-dir && \
    poetry config virtualenvs.create false

WORKDIR /app

# Copy config and lock files
COPY pyproject.toml poetry.lock README.md ./

# Install only required dependencies
RUN poetry install --only process_checks --no-root

# Copy app code
COPY process_check_app/ .

# Find exact path of Python binary and lib
RUN which python3.12 && find / -name "libpython3.12.so*" || true

# ---------- Final stage ----------
FROM gcr.io/distroless/static-debian12

WORKDIR /app

# Copy Python runtime and required files from build
COPY --from=build /usr/local/bin/python3.12 /usr/local/bin/
COPY --from=build /usr/local/lib/python3.12 /usr/local/lib/python3.12
COPY --from=build /usr/local/lib/libpython3.12.so* /usr/lib/

# Set Python path and library path
ENV PYTHONPATH=/usr/local/lib/python3.12
ENV LD_LIBRARY_PATH=/usr/lib

# Copy installed site-packages and app code
COPY --from=build /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=build /app /app

# Expose ports for Streamlit (optional)
EXPOSE 8000
EXPOSE 8501

# Set the entrypoint
ENTRYPOINT ["/usr/local/bin/python3.12", "-m", "streamlit", "run", "streamlit_app.py"]